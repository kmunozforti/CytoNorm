% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDensities.R
\name{plotDensities}
\alias{plotDensities}
\title{Plot densities per batch}
\usage{
plotDensities(input, channels, colors, transformList = NULL)
}
\arguments{
\item{input}{Named list containing paths to fcs files, for both batch and batch_norm}

\item{channels}{Channels to plot}
}
\value{
List with 2 plots per channel
}
\description{
Plot densities per batch
}
\examples{

dir <- system.file("extdata", package = "CytoNorm")
files <- list.files(dir, pattern = "fcs$")
data <- data.frame(File = files,
                   Path = file.path(dir, files),
                   Type = stringr::str_match(files, "_([12]).fcs")[,2],
                   Batch = stringr::str_match(files, "PTLG[0-9]*")[,1],
                   stringsAsFactors = FALSE)
data$Type <- c("1" = "Train", "2" = "Validation")[data$Type]
train_data <- dplyr::filter(data, Type == "Train")
validation_data <- dplyr::filter(data, Type == "Validation")

ff <- flowCore::read.FCS(data$Path[1])
channels <- grep("Di$", flowCore::colnames(ff), value = TRUE)
transformList <- flowCore::transformList(channels,
                                         cytofTransform)
transformList.reverse <- flowCore::transformList(channels,
                                                 cytofTransform.reverse)

model <- CytoNorm.train(files = train_data$Path,
                        labels = train_data$Batch,
                        channels = channels,
                        transformList = transformList,
                        FlowSOM.params = list(nCells = 10000, #1000000
                                              xdim = 15,
                                              ydim = 15,
                                              nClus = 10,
                                              scale = FALSE),
                        normParams = list(nQ = 101),
                        seed = 1,
                        verbose = TRUE)

CytoNorm.normalize(model = model,
                   files = validation_data$Path,
                   labels = validation_data$Batch,
                   transformList = transformList,
                   transformList.reverse = transformList.reverse,
                   verbose = TRUE)

plots <- plotDensities(input = list("PTLG021" = validation_data$Path[1],
                           "PTLG028" = validation_data$Path[2],
                           "PTLG034" = validation_data$Path[3],
                           "PTLG021_norm" = paste0("Normalized/Norm_",validation_data$File[1]),
                           "PTLG028_norm" = paste0("Normalized/Norm_",validation_data$File[2]),
                           "PTLG034_norm" = paste0("Normalized/Norm_",validation_data$File[3])),
             channels = c("Er170Di", "La139Di"),
             colors = c("blue", "red", "green"),
             transformList = transformList)
}
